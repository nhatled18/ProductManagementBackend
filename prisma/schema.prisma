// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql", "sqlite"
  url      = env("DATABASE_URL")
}

// ========== USER MODEL ==========
model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  fullName     String
  email        String?       @unique
  role         String        @default("user")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  
 transactions Transaction[]
 historyLogs  HistoryLog[]
}

// ========== PRODUCT MODEL (Danh mục sản phẩm) ==========
model Product {
  id             Int           @id @default(autoincrement())
  productName    String
  sku            String        @unique
  group          String        @default("")
  
  // Fields from frontend
  stockType1     String        @default("")
  stockType2     String        @default("")
  project        String        @default("")
  unit           String        @default("")
  note           String        @default("")
  
  // Pricing
  cost           Float         @default(0)
  retailPrice    Float         @default(0)
  
  // Timestamps
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  
  // Relations
  inventories    Inventory[]
  transactions   Transaction[]
  historyLogs    HistoryLog[]
  
  @@index([sku])
  @@index([group])
}

// ========== INVENTORY MODEL (Tồn kho chi tiết) ==========
model Inventory {
  id             Int      @id @default(autoincrement())
  productId      Int
  
  // Classification
  stockType1     String   @default("")  // Phân loại kho
  stockType2     String   @default("")  // Phân loại chi tiết
  
  // Pricing
  retailPrice    Float    @default(0)
  cost           Float    @default(0)
  
  // Stock tracking
  initialStock   Int      @default(0)   // Tồn kho đầu
  displayStock   Int      @default(0)   // Trưng bày
  stockIn        Int      @default(0)   // Tổng nhập
  stockOut       Int      @default(0)   // Tổng xuất
  damaged        Int      @default(0)   // Hỏng/Lỗi
  endingStock    Int      @default(0)   // Tồn kho cuối
  
  // Note
  note           String   @default("")
  
  // Timestamps
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relations
  product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  @@index([productId])
  @@index([stockType1])
}

// ========== TRANSACTION MODEL ==========
model Transaction {
  id              Int      @id @default(autoincrement())
  productId       Int
  userId          Int?
  
  // Thông tin giao dịch
  type            String   // "import" or "export"
  transactionCode String   @default("")
  summary         String   @default("")
  
  // Người tạo
  createdBy       String   @default("")
  
  // Chi tiết sản phẩm
  quantity        Int
  unitPrice       Float    @default(0)
  
  // Thông tin bổ sung
  reason          String   @default("")
  note            String   @default("")
  
  // Thời gian
  date            DateTime @default(now())
  createdAt       DateTime @default(now())
  
  // Relations
  product         Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user            User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  // Indexes
  @@index([productId])
  @@index([type])
  @@index([date])
  @@index([transactionCode])
}
// ========== HISTORY LOG MODEL ==========
model HistoryLog {
  id          Int      @id @default(autoincrement())
  action      String   // "create", "update", "delete", "import", "export"
  productId   Int?
  userId      Int?
  productName String
  productSku  String
  details     String   @default("")
  createdAt   DateTime @default(now())
  
  product     Product? @relation(fields: [productId], references: [id], onDelete: SetNull)
  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  @@index([productId])
  @@index([action])
  @@index([createdAt])
}